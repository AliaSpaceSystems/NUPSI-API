openapi: 3.0.2
servers:
  - url: / v3
info:
  description: >-
    NUPSI API based on the OpenAPI 3.0 specification.  You can find out more
    about

    Swagger at [http://swagger.io](http://swagger.io). 


    Some useful links:

    - [The NUPSI API
    repository](https://github.com/AliaSpaceSystems/DEA-API/tree/docs)

    - [The source API definition for the NUPSI
    ](https://github.com/AliaSpaceSystems/DEA-API/blob/docs/dea-api.yaml)
    
    - [OpenAPI online editor](https://mermade.github.io/openapi-gui/)
  version: 0.0.1
  title: Swagger NUPSI - OpenAPI 3.0
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: destine@alia-space.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: personalAreaOfInterest
    description: Operation on personalAreaOfInterest
paths:
  /personalAreaOfInterest:
    post:
      tags:
        - personalAreaOfInterest
      summary: 'Create a new NUPSI personalAreaOfInterest request '
      description: Add a new request to create a new NUPSI personalAreaOfInterest
      operationId: addPersonalAreaOfInterest
      responses:
        '201':
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/PersonalAreaOfInterest'
                description: Return the personalAreaOfInterest created
                properties: {}
          description: Created
        '400':
          description: Bad Parameters
          content:
            application/json:
              schema:
                type: $ref
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Access token is missing or invalid
          content:
            application/json:
              schema:
                type: $ref
                $ref: '#/components/schemas/ApiResponse'
        '429':
          description: Too many Requests
          content:
            application/json:
              schema:
                type: $ref
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Internal Server Eerror
          content:
            application/json:
              schema:
                type: $ref
                $ref: '#/components/schemas/ApiResponse'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                type: $ref
                $ref: '#/components/schemas/ApiResponse'
      security:
        - dea_jwt: []
      requestBody:
        description: Create a new personalAreaOfInterest
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonalAreaOfInterest'
      parameters: []
    get:
      summary: Get the list of available personalAreaOfInterest
      description: >-
        Get the list of available personalAreaOfInterest, filtered by user or all if user
        role is Administrator
      operationId: ''
      tags:
        - personalAreaOfInterest
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: $ref
                  $ref: '#/components/schemas/PersonalAreaOfInterest'
                description: List of available personalAreaOfInterest
          description: OK
        '401':
          description: Access token is missing or invalid
          content:
            application/json:
              schema:
                type: $ref
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: $ref
                $ref: '#/components/schemas/ApiResponse'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                type: $ref
                $ref: '#/components/schemas/ApiResponse'
      security:
        - dea_jwt: []
  /personalAreaOfInterest/{datastoreId}:
    get:
      summary: Return the NUPSI personalAreaOfInterest with the specified Id
      description: ''
      operationId: getPersonalAreaOfInterest
      tags:
        - personalAreaOfInterest
      parameters:
        - in: path
          name: datastoreId
          description: NUPSI personalAreaOfInterest Id
          schema:
            type: string
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: $ref
                $ref: '#/components/schemas/PersonalAreaOfInterest'
                description: Return the NUPSI personalAreaOfInterest with the specified Id
          description: OK
        '401':
          description: Access token is missing or invalid
          content:
            application/json:
              schema:
                type: $ref
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: NUPSI personalAreaOfInterest Not Found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: $ref
                  $ref: '#/components/schemas/PersonalAreaOfInterest'
                maxItems: 0
                minItems: 0
                description: Return an empty Array
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: $ref
                $ref: '#/components/schemas/ApiResponse'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                type: $ref
                $ref: '#/components/schemas/ApiResponse'
      security:
        - dea_jwt: []

externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
components:
  schemas:
    ApiResponse:
      properties:
        code:
          type: integer
          format: int32
          description: HTTP Status Code
          default: null
        description:
          type: string
          description: 'Error cause  '
          default: An Error Occurred
        message:
          type: string
          description: Error message
          default: Failed to execute Job. No products Found.
      xml:
        name: '##default'
      type: object
      required:
        - code
        - description
        - message
      description: Object used as response in case of errors
    PersonalAreaOfInterest:
      x-swagger-router-model: io.swagger.deadatastore.model.DataStore
      required:
        - type
        - value
      properties:
        type:
          type: string
          description: Area Type
          enum:
            - GADM
            - NUTS
            - Polygon
        level:
          type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
          default: 2
          description: >-
            NUTS/GADM level. This property is madatory if the type is equal to
            NUTS or GADM.
        value:
          type: string
          description: >-
            This property is a WKT Polygon if type is equal to Polygon or it is
            the NUTS/GADM code if the type is NUTS or GADM
      xml:
        name: personalAreaOfInterest
      type: object
  requestBodies:
    DataStore:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PersonalAreaOfInterest'
        application/xml:
          schema:
            $ref: '#/components/schemas/PersonalAreaOfInterest'
      description: DataStore object that needs to be created
  securitySchemes:
    dea_auth:
      type: openIdConnect
      flows:
        implicit:
          authorizationUrl: 'https://deadatastore.swagger.io/oauth/authorize'
          scopes:
            'write:datastores': modify datastores in your account
            'read:datastores': read your datastores
      description: DEA Authentication
      openIdConnectUrl: >-
        https://keycloak.alia-space.com/auth/realms/DEA/.well-known/openid-configuration
    dea_jwt:
      type: http
      name: api_key
      in: header
      scheme: Bearer
      bearerFormat: JWT
      description: Bearer
  links: {}
  callbacks: {}
security: []
